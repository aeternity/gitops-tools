app-secrets:
  external:
    secretName: argocd-secret
    values:
      "dex.github.clientID": /argocd/GITHUB_CLIENT_ID
      "dex.github.clientSecret": /argocd/GITHUB_CLIENT_SECRET
      "admin.password": /argocd/ADMIN_PASSWORD
      "admin.passwordMtime": /argocd/ADMIN_MTIME
      "server.secretkey": /argocd/SERVER_SECRET_KEY
      "webhook.github.secret": /argocd/GITHUB_WEBHOOK_SECRET

defaultRepoUrl: 'https://github.com/aeternity/gitops-tools.git'

namespaces:
  - tools
  - apps
  - aenodes

projects:
  - name: tools
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations:
      # keep the resource during migration
      "helm.sh/resource-policy": keep
    description: Tools used to run the environment
    sourceRepos:
      - 'https://github.com/aeternity/gitops-tools.git'
    destinations:
      - namespace: default
        server: https://kubernetes.default.svc
      - namespace: tools
        server: https://kubernetes.default.svc
        # allow configuration of LimitRanges and other globals
      - namespace: apps
        server: https://kubernetes.default.svc
      - namespace: argocd
        server: https://kubernetes.default.svc
      - namespace: kube-system
        server: https://kubernetes.default.svc
      - namespace: traefik
        server: https://kubernetes.default.svc
      - namespace: monitoring
        server: https://kubernetes.default.svc
      - namespace: external-secrets
        server: https://kubernetes.default.svc
      - namespace: cert-manager
        server: https://kubernetes.default.svc
    clusterResourceWhitelist:
      - group: '*'
        kind: '*'
  - name: apps
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations:
      # keep the resource during migration
      "helm.sh/resource-policy": keep
    description: Applications deployed on EKS
    sourceRepos:
      - 'https://github.com/aeternity/gitops-apps.git'
      - 'https://github.com/aeternity/gitops-apps-aelabs.git'
    destinations:
      - namespace: apps
        server: https://kubernetes.default.svc
    clusterResourceWhitelist:
      - group: '*'
        kind: '*'
  - name: aenodes
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    description: AEnodes deployed on EKS
    sourceRepos:
      - 'https://github.com/aeternity/gitops-nodes.git'
    destinations:
      - namespace: aenodes
        server: https://kubernetes.default.svc
      - namespace: kube-system
        server: https://kubernetes.default.svc
    clusterResourceWhitelist:
      - group: '*'
        kind: '*'

applicationsets:
  - name: apps
    generators:
    - git:
        repoURL: https://github.com/aeternity/gitops-apps.git
        revision: dev
        directories:
          - path: '*'
          - path: app
            exclude: true
          - path: app-secrets
            exclude: true
          - path: scaffold
            exclude: true
          - path: scripts
            exclude: true
    template:
      metadata:
        name: '{{path.basename}}'
        annotations:
          argocd.argoproj.io/manifest-generate-paths: .;../app;../app-secrets
      spec:
        project: apps
        source:
          repoURL: https://github.com/aeternity/gitops-apps.git
          targetRevision: dev
          path: '{{path}}'
          helm:
            ignoreMissingValueFiles: true
            valueFiles:
              - values.yaml
              - values-dev.yaml
        destination:
          server: https://kubernetes.default.svc
          namespace: apps
        syncPolicy:
          automated:
            prune: true
            selfHeal: false
          syncOptions:
            - CreateNamespace=true
            - RespectIgnoreDifferences=true
    syncPolicy:
      # Set Application finalizer
      preserveResourcesOnDeletion: true

applications:
  - name: argocd
    project: tools
    namespace: argocd
  - name: aws-load-balancer-controller
    project: tools
    namespace: kube-system
  - name: metrics-server
    project: tools
    namespace: kube-system
  - name: traefik
    project: tools
    namespace: traefik
  - name: kube-prometheus-stack
    project: tools
    namespace: monitoring
    serverSideApply: true
  - name: kube-prometheus-blackbox-exporter
    project: tools
    namespace: monitoring
  - name: fluent-bit
    project: tools
    namespace: monitoring
  - name: kubernetes-event-exporter
    project: tools
    namespace: monitoring
  - name: external-secrets
    project: tools
    namespace: tools
  - name: cluster-autoscaler
    project: tools
    namespace: tools
  - name: vpa
    project: tools
    namespace: tools
  - name: velero
    project: tools
    namespace: tools
  - name: cert-manager
    project: tools
    namespace: tools

additionalApplications: []

argo-cd:
  configs:
    secret:
      createSecret: false
    params:
      applicationsetcontroller.policy: create-update
      # applicationsetcontroller.policy: sync
    cm:
      users.anonymous.enabled: "false"
      dex.config: |
        connectors:
          - type: github
            id: github
            name: GitHub
            config:
              clientID: $dex.github.clientID
              clientSecret: $dex.github.clientSecret
              orgs:
              - name: aeternity
      resource.customizations: |
          networking.k8s.io/Ingress:
            health.lua: |
              hs = {}
              hs.status = "Healthy"
              return hs
          admissionregistration.k8s.io/MutatingWebhookConfiguration:
            ignoreDifferences: |
              jsonPointers:
              - /webhooks/0/failurePolicy
              jqPathExpressions:
              - .webhooks[]?.clientConfig.caBundle
          admissionregistration.k8s.io/ValidatingWebhookConfiguration:
            ignoreDifferences: |
              jsonPointers:
              - /webhooks/0/failurePolicy
              jqPathExpressions:
              - .webhooks[]?.clientConfig.caBundle
          apiextensions.k8s.io:
            ignoreDifferences: |
              jqPathExpressions:
              - .spec.conversion.webhook.clientConfig.caBundle
              - .spec.conversion.webhook.clientConfig.service.name
              - .spec.conversion.webhook.clientConfig.service.namespace
          apiextensions.k8s.io/CustomResourceDefinition:
            ignoreDifferences: |
              managedFieldsManagers:
              - external-secrets
    rbac:
      policy.default: role:readonly
      policy.csv: |
        g, aeternity:devops, role:admin
    repositories:
      tools:
        url: https://github.com/aeternity/gitops-tools.git
        name: tools
      apps:
        url: https://github.com/aeternity/gitops-apps.git
        name: apps
      apps-aelabs:
        url: https://github.com/aeternity/gitops-apps-aelabs.git
        name: apps-aelabs
      nodes:
        url: https://github.com/aeternity/gitops-nodes.git
        name: nodes


  applicationSet:
    enabled: true
    resources:
      requests:
        cpu: 50m
        memory: 48Mi
      limits:
        cpu: 75m
        memory: 72Mi

  controller:
    resources:
      requests:
        cpu: 600m
        memory: 512Mi
      limits:
        cpu: 900m
        memory: 768Mi
    extraArgs:
      - --repo-server-timeout-seconds
      - "360"
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  repoServer:
    resources:
      requests:
        cpu: 500m
        memory: 160Mi
      limits:
        cpu: 750m
        memory: 512Mi
    env:
      - name: "ARGOCD_EXEC_TIMEOUT"
        value: "3m"
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  dex:
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 75m
        memory: 96Mi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  server:
    resources:
      requests:
        cpu: 250m
        memory: 148Mi
      limits:
        cpu: 350m
        memory: 220Mi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    ingress:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        cert-manager.io/cluster-issuer: letsencrypt
      pathType: ImplementationSpecific
    extraArgs:
      - --insecure=true
      - --repo-server-timeout-seconds=180

  redis:
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 75m
        memory: 96Mi

  notifications:
    enabled: false
