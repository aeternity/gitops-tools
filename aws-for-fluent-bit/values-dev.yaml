logging:
  global:
  ## Override the deployment namespace
  #   namespaceOverride:

  image:
    repository: amazon/aws-for-fluent-bit
    tag: 2.13.0
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    parsersFiles:
      - /fluent-bit/parsers/parsers.conf
    extraParsers: |
      [PARSER]
          Name   apache
          Format regex
          Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z

      [PARSER]
          Name   apache2
          Format regex
          Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z

      [PARSER]
          Name   apache_error
          Format regex
          Regex  ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$

      [PARSER]
          Name   nginx
          Format regex
          Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z

      [PARSER]
          Name   json
          Format json
          Time_Key time
          Time_Format %d/%b/%Y:%H:%M:%S %z

      [PARSER]
          Name        docker
          Format      json
          Time_Key    time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
          Time_Keep   On

      [PARSER]
          Name        syslog
          Format      regex
          Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
          Time_Key    time
          Time_Format %b %d %H:%M:%S

  input:
    tag: "kube.*"
    path: "/var/log/containers/*.log"
    db: "/var/log/flb_kube.db"
    parser: docker
    dockerMode: "On"
    memBufLimit: 5MB
    skipLongLines: "On"
    refreshInterval: 10

  # extraInputs: |
  #   [INPUT]
  #       Name         winlog
  #       Channels     Setup,Windows PowerShell
  #       Interval_Sec 1
  #       DB           winlog.sqlite

  filter:
    match: "kube.*"
    kubeURL: "https://kubernetes.default.svc.cluster.local:443"
    mergeLog: "On"
    mergeLogKey: "log_processed"
    keepLog: "Off"
    k8sLoggingParser: "On"
    k8sLoggingExclude: "On"
    Annotations: "Off"

  extraFilters: |
    [FILTER]
        Name        parser
        Match       kube.*
        Key_Name    log
        Parser      nginx
        Preserve_Key  True
        Reserve_Data  True
    [FILTER]
        Name modify
        Match kube.*
        Remove stream
        Rename method app_method
        Rename path app_path
        Rename remote app_remote
        Rename size app_size
        Rename host app_host
        Rename user app_user
        Rename code app_code
        Rename referer app_referer
    [FILTER]
        Name nest
        Match *
        Operation nest
        Wildcard app_*
        Nest_under app
        Remove_prefix app_

  cloudWatch:
    enabled: false
    match: "*"
    region: "us-east-1"
    logGroupName: "/aws/eks/fluentbit-cloudwatch/logs"
    logStreamName:
    logStreamPrefix: "fluentbit-"
    logKey:
    logFormat:
    logRetentionDays:
    roleArn:
    autoCreateGroup: true
    endpoint:
    credentialsEndpoint: {}

  firehose:
    enabled: false
    match: "*"
    region: "us-east-1"
    deliveryStream: "my-stream"
    dataKeys:
    roleArn:
    endpoint:
    timeKey:

  kinesis:
    enabled: false
    match: "*"
    region: "us-east-1"
    stream: "my-kinesis-stream-name"
    partitionKey: "container_id"
    appendNewline:
    replaceDots:
    dataKeys:
    roleArn:
    endpoint:
    stsEndpoint:
    timeKey:
    timeKeyFormat:
    compression:
    aggregation:
    experimental:
      concurrency:
      concurrencyRetries:

  elasticsearch:
    enabled: true
    match: "*"
    host: "search-opensearch-dev-rtq7cbn3a4z77ts5k6puordcaq.eu-central-1.es.amazonaws.com"
    awsRegion: "eu-central-1"
    awsAuth: "On"
    tls: "On"
    port: "443"
    retryLimit: 6
    replaceDots: "On"

  # extraOutputs: |
  #   [OUTPUT]
  #     Name file
  #     Format template
  #     Template {time} used={Mem.used} free={Mem.free} total={Mem.total}

  serviceAccount:
    create: true
    annotations: {}
    name:

  resources:
    limits:
      memory: 250Mi
    requests:
      cpu: 50m
      memory: 50Mi

  ## Assign a PriorityClassName to pods if set
  # priorityClassName: system-node-critical

  updateStrategy:
    type: RollingUpdate

  nodeSelector: {}

  tolerations: []

  affinity: {}

  annotations: {}
    # iam.amazonaws.com/role: arn:aws:iam::123456789012:role/role-for-fluent-bit

  env: []
  ## To add extra environment variables to the pods, add as below
  # env:
  #   - name: AWS_REGION
  #     valueFrom:
  #       configMapKeyRef:
  #         name: fluent-bit-cluster-info
  #         key: logs.region
  #   - name: CLUSTER_NAME
  #     valueFrom:
  #       configMapKeyRef:
  #         name: fluent-bit-cluster-info
  #         key: cluster.name
  #   - name: HOST_NAME
  #     valueFrom:
  #       fieldRef:
  #         fieldPath: spec.nodeName


  volumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers

  volumeMounts:
    - name: varlog
      mountPath: /var/log
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
