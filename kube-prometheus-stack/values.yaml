app-secrets:
  external:
    values:
      GITHUB_CLIENT_ID: /monitoring/GITHUB_CLIENT_ID
      GITHUB_CLIENT_SECRET: /monitoring/GITHUB_CLIENT_SECRET
      GRAFANA_ADMIN_USER: /monitoring/GRAFANA_ADMIN_USER
      GRAFANA_ADMIN_PASSWORD: /monitoring/GRAFANA_ADMIN_PASSWORD
      SLACK_HOOK_URL: /monitoring/SLACK_HOOK_URL
      SLACK_HOOK_URL_PLATFORM: /monitoring/SLACK_HOOK_URL_PLATFORM
      SLACK_HOOK_URL_BLOCKCHAIN: /monitoring/SLACK_HOOK_URL_BLOCKCHAIN
      SLACK_HOOK_URL_APPS: /monitoring/SLACK_HOOK_URL_APPS

alerts:
  platformSlackHookUrlKey: SLACK_HOOK_URL_PLATFORM
  blockchainSlackHookUrlKey: SLACK_HOOK_URL_BLOCKCHAIN
  appsSlackHookUrlKey: SLACK_HOOK_URL_APPS

grafanaDashboards:
  aeternity:
    - dashboards/aeternity/aeternity-instances.json
    - dashboards/aeternity/aeternity-node-exporter-node.json
    - dashboards/aeternity/aeternity-node-exporter-group.json
    - dashboards/aeternity/aeternity-blockchain.json
    - dashboards/aeternity/aeternity-protocol.json
    - dashboards/aeternity/aeternity-erlang.json
    - dashboards/aeternity/aeternity-job-queues.json

kube-prometheus-stack:
  ## Disable scrapping unused metrics: https://medium.com/gumgum-tech/how-to-reduce-your-prometheus-cost-6c7cc685e347
  ## Component scraping the kube api server
  ##
  kubeApiServer:
   enabled: false

  ## Component scraping etcd
  ##
  kubeEtcd:
   enabled: false

  kubelet:
   serviceMonitor:
     cAdvisorMetricRelabelings:
     - sourceLabels: [__name__]
       separator: ;
       regex: "container_(tasks_state|memory_fail.*)"
       action: drop
     # metricRelabelings:
     # - sourceLabels: [__name__]
     #   separator: ;
     #   regex: (storage_operation.+|kubelet.+|)
     #   action: drop

  prometheusOperator:
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
      limits:
        cpu: 15m
        memory: 48Mi

  kube-state-metrics:
    resources:
      requests:
        cpu: 10m
        memory: 64Mi
      limits:
        cpu: 15m
        memory: 96Mi
    prometheus:
      monitor:
        enabled: true
    selfMonitor:
      enabled: true
    rbac:
      extraRules:
        - apiGroups: ["autoscaling.k8s.io"]
          resources: ["verticalpodautoscalers"]
          verbs: ["list", "watch"]
    customResourceState:
      enabled: true
      config:
        kind: CustomResourceStateMetrics
        spec:
          resources:
            - groupVersionKind:
                group: autoscaling.k8s.io
                kind: "VerticalPodAutoscaler"
                version: "v1"
              labelsFromPath:
                verticalpodautoscaler: [metadata, name]
                namespace: [metadata, namespace]
                target_api_version: [apiVersion]
                target_kind: [spec, targetRef, kind]
                target_name: [spec, targetRef, name]
              metrics:
                - name: "vpa_containerrecommendations_target"
                  help: "VPA container recommendations for memory."
                  each:
                    type: Gauge
                    gauge:
                      path: [status, recommendation, containerRecommendations, "0", target, memory]
                  labelsFromPath:
                    container: [status, recommendation, containerRecommendations, "0", containerName]
                  commonLabels:
                    resource: "memory"
                    unit: "byte"
                - name: "vpa_containerrecommendations_target"
                  help: "VPA container recommendations for cpu."
                  each:
                    type: Gauge
                    gauge:
                      path: [status, recommendation, containerRecommendations, "0", target, cpu]
                  labelsFromPath:
                    container: [status, recommendation, containerRecommendations, "0", containerName]
                  commonLabels:
                    resource: "cpu"
                    unit: "core"

  prometheus-node-exporter:
    resources:
      requests:
        cpu: 100m
        memory: 16Mi
      limits:
        cpu: 150m
        memory: 24Mi

  prometheus:
    serviceMonitorSelector: {}
    prometheusSpec:
      resources:
        requests:
          cpu: 100m
          memory: 1.3Gi
        limits:
          cpu: 150m
          memory: 1.8Gi
      serviceMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      retention: 10d
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 20Gi
    ingress:
      enabled: false
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        cert-manager.io/cluster-issuer: letsencrypt
      pathType: ImplementationSpecific

  grafana:
    resources:
      requests:
        cpu: 300m
        memory: 128Mi
      limits:
        cpu: 450m
        memory: 192Mi
    admin:
      existingSecret: kube-prometheus-stack-app-secrets
      userKey: GRAFANA_ADMIN_USER
      passwordKey: GRAFANA_ADMIN_PASSWORD
    sidecar:
      resources:
        requests:
          cpu: 60m
          memory: 100Mi
        limits:
          cpu: 90m
          memory: 130Mi
      dashboards:
        enabled: true
        folderAnnotation: grafana_dashboard_folder
        defaultFolderName: General
        provider:
          foldersFromFilesStrcuture: true
    grafana.ini:
      analytics:
        reporting_enabled: false
        check_for_updates: false
        check_for_plugin_updates: false
        feedback_links_enabled: false
      plugins:
        enable_alpha: true
      auth.github:
        enabled: true
        client_id: $__file{/etc/secrets/GITHUB_CLIENT_ID}
        client_secret: $__file{/etc/secrets/GITHUB_CLIENT_SECRET}
        scopes: user:email,read:org
        auth_url: https://github.com/login/oauth/authorize
        token_url: https://github.com/login/oauth/access_token
        api_url: https://api.github.com/user
        allow_sign_up: true
        allowed_organizations: aeternity
        role_attribute_path: contains(groups[*], '@aeternity/devops') && 'GrafanaAdmin' || 'Viewer'
        allow_assign_grafana_admin: true
    ingress:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        cert-manager.io/cluster-issuer: letsencrypt
      pathType: ImplementationSpecific
    plugins:
      - grafana-piechart-panel
    dashboardsConfigMaps:
      aeternity: grafana-dashboards-aeternity
    dashboardProviders:
     dashboardproviders.yaml:
       apiVersion: 1
       providers:
       - name: 'tools'
         orgId: 1
         folder: 'Tools'
         type: file
         disableDeletion: true
         editable: true
         options:
           path: /var/lib/grafana/dashboards/tools
       - name: 'aeternity'
         orgId: 1
         folder: 'Aeternity'
         type: file
         disableDeletion: true
         editable: true
         options:
           path: /var/lib/grafana/dashboards/aeternity
    dashboards:
      tools:
        traefik2:
          gnetId: 11462
          revision: 1
          datasource: Prometheus
        traefik22:
          gnetId: 12250
          revision: 1
          datasource: Prometheus
        argocd:
          gnetId: 14584
          revision: 1
          datasource: Prometheus
        blackbox:
          gnetId: 13659
          revision: 1
          datasource: Prometheus
        autoscaler:
          gnetId: 3831
          revision: 1
          datasource: Prometheus
        hpa:
          gnetId: 10257
          revision: 1
          datasource: Prometheus
        vpa:
          gnetId: 14588
          revision: 5
          datasource: Prometheus
        cert-manager:
          gnetId: 20842
          revision: 2
          datasource: Prometheus
        aws-lb-controller:
          gnetId: 18319
          revision: 2
          datasource: Prometheus

    extraSecretMounts:
    - name: secrets-mount
      secretName: kube-prometheus-stack-app-secrets
      defaultMode: 0440
      mountPath: /etc/secrets
      readOnly: true

  alertmanager:
    alertmanagerSpec:
      resources:
        limits:
          memory: 32Mi
        requests:
          cpu: 10m
          memory: 32Mi
      logLevel: debug
      # don't filter alter routing on namespace
      alertmanagerConfigMatcherStrategy:
        type: None
    ingress:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        cert-manager.io/cluster-issuer: letsencrypt
      pathType: ImplementationSpecific
    config:
      templates:
        - '/etc/alertmanager/config/*.tmpl'
    templateFiles:
      slack.tmpl: |-
           {{ define "cluster" }}{{ .ExternalURL | reReplaceAll ".*alertmanager\\.(.*)" "$1" }}{{ end }}
           {{ define "slack.ae.text" }}
           {{- $root := . -}}
           {{ range .Alerts }}
             *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
             *Cluster:* {{ template "cluster" $root }}
             *Description:* {{ .Annotations.description }}
             *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:>
             *Runbook:* <{{ .Annotations.runbook }}|:spiral_note_pad:>
             *Details:*
               {{ range .Labels.SortedPairs }} - *{{ .Name }}:* `{{ .Value }}`
               {{ end }}
           {{ end }}
           {{ end }}
           {{ define "slack.ae.title" -}}
              [{{ .Status | toUpper -}}
              {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
              ] {{ .CommonLabels.alertname }}
            {{- end }}

  defaultRules:
    rules:
      kubelet: false
      kubeProxy: false
      kubeSchedulerAlerting: false
      kubeSchedulerRecording: false
      kubeControllerManager: false
    additionalRuleLabels: {}

  additionalPrometheusRulesMap:
    - name: additional
      groups:
      - name: sd-node-exporter-rules
        rules:
        - expr: |
            count without (cpu) (
              count without (mode) (
                node_cpu_seconds_total{job="sd_node_exporter"}
              )
            )
          record: instance:node_num_cpu:sum
        - expr: |
            1 - avg without (cpu, mode) (
              rate(node_cpu_seconds_total{job="sd_node_exporter", mode="idle"}[1m])
            )
          record: instance:node_cpu_utilisation:rate1m
        - expr: |
            (
              node_load1{job="sd_node_exporter"}
            /
              instance:node_num_cpu:sum{job="sd_node_exporter"}
            )
          record: instance:node_load1_per_cpu:ratio
        - expr: |
            1 - (
              node_memory_MemAvailable_bytes{job="sd_node_exporter"}
            /
              node_memory_MemTotal_bytes{job="sd_node_exporter"}
            )
          record: instance:node_memory_utilisation:ratio
        - expr: |
            rate(node_vmstat_pgmajfault{job="sd_node_exporter"}[1m])
          record: instance:node_vmstat_pgmajfault:rate1m
        - expr: |
            rate(node_disk_io_time_seconds_total{job="sd_node_exporter", device!=""}[1m])
          record: instance_device:node_disk_io_time_seconds:rate1m
        - expr: |
            rate(node_disk_io_time_weighted_seconds_total{job="sd_node_exporter", device!=""}[1m])
          record: instance_device:node_disk_io_time_weighted_seconds:rate1m
        - expr: |
            sum without (device) (
              rate(node_network_receive_bytes_total{job="sd_node_exporter", device!="lo"}[1m])
            )
          record: instance:node_network_receive_bytes_excluding_lo:rate1m
        - expr: |
            sum without (device) (
              rate(node_network_transmit_bytes_total{job="sd_node_exporter", device!="lo"}[1m])
            )
          record: instance:node_network_transmit_bytes_excluding_lo:rate1m
        - expr: |
            sum without (device) (
              rate(node_network_receive_drop_total{job="sd_node_exporter", device!="lo"}[1m])
            )
          record: instance:node_network_receive_drop_excluding_lo:rate1m
        - expr: |
            sum without (device) (
              rate(node_network_transmit_drop_total{job="sd_node_exporter", device!="lo"}[1m])
            )
          record: instance:node_network_transmit_drop_excluding_lo:rate1m
      - name: sd-node-exporter-alerts
        rules:
        - alert: NodeFilesystemSpaceFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left and is filling up.
            summary: Filesystem is predicted to run out of space within the next 24 hours.
          expr: |
            (
              node_filesystem_avail_bytes{job="sd_node_exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="sd_node_exporter",fstype!="",mountpoint!=""} * 100 < 40
            and
              predict_linear(node_filesystem_avail_bytes{job="sd_node_exporter",fstype!="",mountpoint!=""}[6h], 24*60*60) < 0
            and
              node_filesystem_readonly{job="sd_node_exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemSpaceFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left and is filling up fast.
            summary: Filesystem is predicted to run out of space within the next 4 hours.
          expr: |
            (
              node_filesystem_avail_bytes{job="sd_node_exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="sd_node_exporter",fstype!="",mountpoint!=""} * 100 < 20
            and
              predict_linear(node_filesystem_avail_bytes{job="sd_node_exporter",fstype!="",mountpoint!=""}[6h], 4*60*60) < 0
            and
              node_filesystem_readonly{job="sd_node_exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeFilesystemAlmostOutOfSpace
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left.
            summary: Filesystem has less than 5% space left.
          expr: |
            (
              node_filesystem_avail_bytes{job="sd_node_exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="sd_node_exporter",fstype!="",mountpoint!=""} * 100 < 5
            and
              node_filesystem_readonly{job="sd_node_exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 30m
          labels:
            severity: warning
        - alert: NodeFilesystemAlmostOutOfSpace
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left.
            summary: Filesystem has less than 3% space left.
          expr: |
            (
              node_filesystem_avail_bytes{job="sd_node_exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="sd_node_exporter",fstype!="",mountpoint!=""} * 100 < 3
            and
              node_filesystem_readonly{job="sd_node_exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 30m
          labels:
            severity: critical
        - alert: NodeFilesystemFilesFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left and is filling up.
            summary: Filesystem is predicted to run out of inodes within the next 24 hours.
          expr: |
            (
              node_filesystem_files_free{job="sd_node_exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="sd_node_exporter",fstype!="",mountpoint!=""} * 100 < 40
            and
              predict_linear(node_filesystem_files_free{job="sd_node_exporter",fstype!="",mountpoint!=""}[6h], 24*60*60) < 0
            and
              node_filesystem_readonly{job="sd_node_exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemFilesFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left and is filling up fast.
            summary: Filesystem is predicted to run out of inodes within the next 4 hours.
          expr: |
            (
              node_filesystem_files_free{job="sd_node_exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="sd_node_exporter",fstype!="",mountpoint!=""} * 100 < 20
            and
              predict_linear(node_filesystem_files_free{job="sd_node_exporter",fstype!="",mountpoint!=""}[6h], 4*60*60) < 0
            and
              node_filesystem_readonly{job="sd_node_exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeFilesystemAlmostOutOfFiles
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left.
            summary: Filesystem has less than 5% inodes left.
          expr: |
            (
              node_filesystem_files_free{job="sd_node_exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="sd_node_exporter",fstype!="",mountpoint!=""} * 100 < 5
            and
              node_filesystem_readonly{job="sd_node_exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemAlmostOutOfFiles
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left.
            summary: Filesystem has less than 3% inodes left.
          expr: |
            (
              node_filesystem_files_free{job="sd_node_exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="sd_node_exporter",fstype!="",mountpoint!=""} * 100 < 3
            and
              node_filesystem_readonly{job="sd_node_exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeNetworkReceiveErrs
          annotations:
            description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered
              {{ printf "%.0f" $value }} receive errors in the last two minutes.'
            summary: Network interface is reporting many receive errors.
          expr: |
            rate(node_network_receive_errs_total{job="sd_node_exporter"}[2m]) / rate(node_network_receive_packets_total{job="sd_node_exporter"}[2m]) > 0.01
          for: 1h
          labels:
            severity: warning
        - alert: NodeNetworkTransmitErrs
          annotations:
            description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered
              {{ printf "%.0f" $value }} transmit errors in the last two minutes.'
            summary: Network interface is reporting many transmit errors.
          expr: |
            rate(node_network_transmit_errs_total{job="sd_node_exporter"}[2m]) / rate(node_network_transmit_packets_total{job="sd_node_exporter"}[2m]) > 0.01
          for: 1h
          labels:
            severity: warning
        - alert: NodeHighNumberConntrackEntriesUsed
          annotations:
            description: '{{ $value | humanizePercentage }} of conntrack entries are used.'
            summary: Number of conntrack are getting close to the limit.
          expr: |
            (node_nf_conntrack_entries{job="sd_node_exporter"} / node_nf_conntrack_entries_limit) > 0.75
          labels:
            severity: warning
        - alert: NodeTextFileCollectorScrapeError
          annotations:
            description: Node Exporter text file collector on {{ $labels.instance }} failed
              to scrape.
            summary: Node Exporter text file collector failed to scrape.
          expr: |
            node_textfile_scrape_error{job="sd_node_exporter"} == 1
          labels:
            severity: warning
        - alert: NodeClockSkewDetected
          annotations:
            description: Clock at {{ $labels.instance }} is out of sync by more than 0.05s.
              Ensure NTP is configured correctly on this host.
            summary: Clock skew detected.
          expr: |
            (
              node_timex_offset_seconds{job="sd_node_exporter"} > 0.05
            and
              deriv(node_timex_offset_seconds{job="sd_node_exporter"}[5m]) >= 0
            )
            or
            (
              node_timex_offset_seconds{job="sd_node_exporter"} < -0.05
            and
              deriv(node_timex_offset_seconds{job="sd_node_exporter"}[5m]) <= 0
            )
          for: 10m
          labels:
            severity: warning
        - alert: NodeClockNotSynchronising
          annotations:
            description: Clock at {{ $labels.instance }} is not synchronising. Ensure NTP
              is configured on this host.
            summary: Clock not synchronising.
          expr: |
            min_over_time(node_timex_sync_status{job="sd_node_exporter"}[5m]) == 0
            and
            node_timex_maxerror_seconds{job="sd_node_exporter"} >= 16
          for: 10m
          labels:
            severity: warning
        - alert: NodeRAIDDegraded
          annotations:
            description: RAID array '{{ $labels.device }}' at {{ $labels.instance }} is
              in degraded state due to one or more disks failures. Number of spare drives
              is insufficient to fix issue automatically.
            summary: RAID Array is degraded.
          expr: |
            node_md_disks_required{job="sd_node_exporter",device!=""} - ignoring (state) (node_md_disks{state="active",job="sd_node_exporter",device!=""}) > 0
          for: 15m
          labels:
            severity: critical
        - alert: NodeRAIDDiskFailure
          annotations:
            description: At least one device in RAID array at {{ $labels.instance }} failed.
              Array '{{ $labels.device }}' needs attention and possibly a disk swap.
            summary: Failed device in RAID array.
          expr: |
            node_md_disks{state="failed",job="sd_node_exporter",device!=""} > 0
          labels:
            severity: warning
        - alert: NodeFileDescriptorLimit
          annotations:
            description: File descriptors limit at {{ $labels.instance }} is currently at
              {{ printf "%.2f" $value }}%.
            summary: Kernel is predicted to exhaust file descriptors limit soon.
          expr: |
            (
              node_filefd_allocated{job="sd_node_exporter"} * 100 / node_filefd_maximum{job="sd_node_exporter"} > 70
            )
          for: 15m
          labels:
            severity: warning
        - alert: NodeFileDescriptorLimit
          annotations:
            description: File descriptors limit at {{ $labels.instance }} is currently at
              {{ printf "%.2f" $value }}%.
            summary: Kernel is predicted to exhaust file descriptors limit soon.
          expr: |
            (
              node_filefd_allocated{job="sd_node_exporter"} * 100 / node_filefd_maximum{job="sd_node_exporter"} > 90
            )
          for: 15m
          labels:
            severity: critical
        - alert: NodeCPUHighUsage
          annotations:
            description: |
              CPU usage at {{ $labels.instance }} has been above 90% for the last 15 minutes, is currently at {{ printf "%.2f" $value }}%.
            summary: High CPU usage.
          expr: |
            sum without(mode) (avg without (cpu) (rate(node_cpu_seconds_total{job="sd_node_exporter", mode!="idle"}[2m]))) * 100 > 90
          for: 15m
          labels:
            severity: info
        - alert: NodeSystemSaturation
          annotations:
            description: |
              System load per core at {{ $labels.instance }} has been above 2 for the last 15 minutes, is currently at {{ printf "%.2f" $value }}.
              This might indicate this instance resources saturation and can cause it becoming unresponsive.
            summary: System saturated, load per core is very high.
          expr: |
            node_load1{job="sd_node_exporter"}
            / count without (cpu, mode) (node_cpu_seconds_total{job="sd_node_exporter", mode="idle"}) > 2
          for: 15m
          labels:
            severity: warning
        - alert: NodeMemoryMajorPagesFaults
          annotations:
            description: |
              Memory major pages are occurring at very high rate at {{ $labels.instance }}, 500 major page faults per second for the last 15 minutes, is currently at {{ printf "%.2f" $value }}.
              Please check that there is enough memory available at this instance.
            summary: Memory major page faults are occurring at very high rate.
          expr: |
            rate(node_vmstat_pgmajfault{job="sd_node_exporter"}[5m]) > 500
          for: 15m
          labels:
            severity: warning
        - alert: NodeMemoryHighUtilization
          annotations:
            description: |
              Memory is filling up at {{ $labels.instance }}, has been above 90% for the last 15 minutes, is currently at {{ printf "%.2f" $value }}%.
            summary: Host is running out of memory.
          expr: |
            100 - (node_memory_MemAvailable_bytes{job="sd_node_exporter"} / node_memory_MemTotal_bytes{job="sd_node_exporter"} * 100) > 90
          for: 15m
          labels:
            severity: warning
        - alert: NodeDiskIOSaturation
          annotations:
            description: |
              Disk IO queue (aqu-sq) is high on {{ $labels.device }} at {{ $labels.instance }}, has been above 10 for the last 15 minutes, is currently at {{ printf "%.2f" $value }}.
              This symptom might indicate disk saturation.
            summary: Disk IO queue is high.
          expr: |
            rate(node_disk_io_time_weighted_seconds_total{job="sd_node_exporter", device!=""}[5m]) > 10
          for: 30m
          labels:
            severity: warning
        - alert: NodeSystemdServiceFailed
          annotations:
            description: Systemd service {{ $labels.name }} has entered failed state at
              {{ $labels.instance }}
            summary: Systemd service has entered failed state.
          expr: |
            node_systemd_unit_state{job="sd_node_exporter", state="failed"} == 1
          for: 5m
          labels:
            severity: warning
      - name: aenode-instance-alerts
        rules:
        - alert: InstanceDown
          expr: up{job="sd_node_exporter"} == 0
          for: 10m
          labels:
            severity: critical
          annotations:
            summary: "Instance {{ $labels.instance }} down"
            description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 10 minutes."
        - alert: StatsdExporterBrokenIntegration
          expr: rate(statsd_exporter_samples_total{job="sd_statsd_exporter"}[5m]) < 10
          for: 10m
          labels:
            severity: critical
          annotations:
            summary: "[{{ $labels.env }}] StatsD Exporter integration on {{ $labels.instance }} not working"
            description: "{{ $labels.instance }} of job {{ $labels.job }} is not receiving metric samples for more than 10 minutes."
        - alert: StatsdExporterDown
          expr: up{job="sd_statsd_exporter"} == 0
          for: 10m
          labels:
            severity: critical
          annotations:
            summary: "[{{ $labels.env }}] StatsD Exporter on {{ $labels.instance }} is down."
            description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 10 minutes."
        - alert: AeMonDownTestnet
          expr: absent(up{job="sd_statsd_exporter", env="uat_mon"})
          for: 10m
          labels:
            severity: critical
          annotations:
            summary: "[{{ $labels.env }}] Aeternity Testnet monitor is down."
            description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 10 minutes."
        - alert: AeMonDownMainnet
          expr: absent(up{job="sd_statsd_exporter", env="main_mon"})
          for: 10m
          labels:
            severity: critical
          annotations:
            summary: "[{{ $labels.env }}] Aeternity Mainnet monitor is down."
            description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 10 minutes."
      - name: aenode-p2p-alerts
        rules:
        - alert: AeNodeOutOfSync
          expr: aecore_sync_progress < 100
          for: 10m
          labels:
            severity: critical
          annotations:
            summary: "[{{ $labels.env }}] Aeternity node {{ $labels.public_ip }} is out of sync."
            description: "{{ $labels.instance }} of job {{ $labels.job }} has been out of sync for more than 10 minutes."
        - alert: AeNodeNoOutboundConnections
          expr: aecore_peers_connection{direction="outbound", env!~"dev1"} == 0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Aeternity node {{ $labels.public_ip }} have no outbound connections."
            description: "{{ $labels.instance }} of job {{ $labels.job }} have no outbound connections for more than 10 minutes."
        - alert: AeNodeNoInboundConnections
          expr: aecore_peers_connection{direction="inbound", env!~"dev1"} == 0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Aeternity node {{ $labels.public_ip }} have no inbound connections."
            description: "{{ $labels.instance }} of job {{ $labels.job }} have no inbound connections for more than 10 minutes."
        - alert: AeNodeLowPingRate
          expr: rate(aecore_peers_ping{status="success", env!~"dev1"}[5m]) == 0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Aeternity node {{ $labels.public_ip }} low ping rate."
            description: "{{ $labels.instance }} of job {{ $labels.job }} have low ping rate for more than 10 minutes."
      - name: aenode-txpool-alerts
        rules:
        - alert: AeNodeLargeTxPool
          expr: avg by (env) (aecore_txpool_size) > 200
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Transaction pool is too large."
            description: "Transaction pool size on {{ $labels.env }} is {{ $value }}."
      - name: aenode-mining-alerts
        rules:
        - alert: AeNodeMining
          expr: avg by (env) (rate(aecore_mining_retries_total{env!~"uat|dev1"}[3m])) > 0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Unexpected mining."
            description: "Nodes on {{ $labels.env }} are not expected to mine."
        - alert: AeNodeNotMining
          expr: avg by (env) (rate(aecore_mining_retries_total{env="uat"}[3m])) == 0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Mining stopped."
            description: "Nodes on {{ $labels.env }} are not mining for more than 10 minutes."
        - alert: AeNodeMiningNoBlocks
          expr: avg by (env) (rate(aecore_mining_blocks_total{env="uat"}[3m])) == 0
          for: 30m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Blocks not found."
            description: "No blocks mined for more than 30 minutes on {{ $labels.env }}."
      - name: aenode-protocol-alerts
        rules:
        - alert: AeCoreMonSlowKeyBlocks
          expr: avg by (env) (avg_over_time(aecore_aemon_keyblock_interval_ms[6h])) / 1000 / 60 > 3.50
          for: 60m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Slow keyblocks."
            description: "Slow keyblocks for last 60m with average of {{ $value }} over last 6h."
        - alert: AeCoreMonFastKeyBlocks
          expr: avg by (env) (avg_over_time(aecore_aemon_keyblock_interval_ms[6h])) / 1000 / 60 < 2.50
          for: 60m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Fast keyblocks."
            description: "Fast keyblocks for last 60m with average of {{ $value }} over last 6h."
        - alert: AeCoreMonHighKeyBlockPropagationLatency
          expr: avg by (env) (aecore_aemon_keyblock_propagation_ms) / 1000 > 25.0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] High keyblock propagation latency."
            description: "Average keyblock propagation latency ({{ $value }}) is more than 25s for last 10m."
        - alert: AeCoreMonHighMicroblocks
          expr: avg by (env) (avg_over_time(aecore_aemon_generation_microblocks[30m])) > 60
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] High number of microblocks per generation."
            description: "Average number of microblocks for last 10 generations is {{ $value }} with protocol soft limit of 60."
        - alert: AeCoreMonSlowMicroBlocks
          expr: avg by (env) (avg_over_time(aecore_aemon_microblock_interval_ms[15m])) / 1000 > 15.0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Slow microblocks."
            description: "Slow microblocks for last 10m with average of {{ $value }} over last 15m."
        - alert: AeCoreMonFastMicroBlocks
          expr: avg by (env) (avg_over_time(aecore_aemon_keyblock_interval_ms[6h])) / 1000 / 60 < 2.50
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Fast microblocks."
            description: "Fast microblocks for last 10m with average of {{ $value }} over last 15m."
        - alert: AeCoreMonHighMicroBlockPropagationLatency
          expr: avg by (env) (aecore_aemon_microblock_propagation_ms) / 1000 > 12.0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] High microblock propagation latency."
            description: "Average microblock propagation latency ({{ $value }}) is more than 12s for last 10m."
        - alert: AeCoreMonHighMicroForks
          expr: avg by (env) (rate(aecore_aemon_microforks_total[30m])) * 180 > 2
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] High number of microforks."
            description: "Average number of microforks over 30m ({{ $value }}) is high for last 10m."
        - alert: AeCoreHighNumberOfMicroBlockTransactions
          expr: avg by (env) (aecore_aemon_microblock_transactions) > 350
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] High number of microblock transactions."
            description: "Average number of microblock transactions ({{ $value }}) is more than 350 protocol limit for last 10m."
        - alert: AeCoreHighMicroBlockGasUsage
          expr: avg by (env) (aecore_aemon_microblock_gas) > 6000000
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] High microblock gas usage."
            description: "Average microblock gas usage ({{ $value }}) is more than 6M protocol limit for last 10m."
        - alert: AeCoreMonLowTransactions
          expr: avg by (env) (aecore_aemon_generation_transactions) == 0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Low number of transactions."
            description: "No transactions in the last 10 minutes."
        - alert: AeCoreLargeTransactionsSize
          expr: avg by (env) (aecore_aemon_transaction_size_bytes) > 270000
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Large transactions size."
            description: "Average transactions size ({{ $value | humanize }}) is close to 299.25k protocol limit for last 10m."
        - alert: AeCoreMonHighConfirmationDelay
          expr: avg by (env) (aecore_aemon_confirmation_delay) > 1.0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] High confirmation delay."
            description: "More than 1 block confirmation delay ({{ $value }}) in the last 10 minutes."
      - name: aenode-aecore-aemon-self-alerts
        rules:
        - alert: AeCoreMonLowMonitorTransactions
          expr: avg by (env) (aecore_aemon_generation_mon_transactions) == 0
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Low number of monitoring transactions in a generation."
            description: "No monitoring transactions in a generation in the last 10 minutes."
        - alert: AeCoreMonLargeMonitorPublisherQueue
          expr: avg by (env) (aecore_aemon_publisher_queue_size) > 5
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Large monitoroing transactions queue size."
            description: "Queue size is {{ $value }} but should be less than 5 usualy 3."
        - alert: AeCoreMonMonitorManyExpiredTransactions
          expr: avg by (env) (aecore_aemon_publisher_queue_expired) > 1
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: "[{{ $labels.env }}] Large number of expired transactions."
            description: "Large number of expired monitoring transactions ({{ $value }})."
      - name: blackbox
        rules:
          - alert: BlackboxProbeFailing
            expr: up{job="kube-prometheus-blackbox-exporter"} == 0 or probe_success{job="kube-prometheus-blackbox-exporter"} == 0
            for: 10m
            labels:
              severity: critical
            annotations:
              summary: "[{{ $labels.scope }}] Probe failed for target {{ $labels.target }})"
              description: "Probe URL: {{ $labels.instance }}"
      - name: cert-manager
        rules:
        - alert: CertManagerAbsent
          annotations:
            description: New certificates will not be able to be minted, and existing ones
              can't be renewed until cert-manager is back.
            runbook_url: https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagerabsent
            summary: Cert Manager has disappeared from Prometheus service discovery.
          expr: absent(up{job="cert-manager"})
          for: 10m
          labels:
            severity: critical
      - name: certificates
        rules:
        - alert: CertManagerCertExpirySoon
          annotations:
            dashboard_url: https://grafana.example.com/d/TvuRo2iMk/cert-manager
            description: The domain that this cert covers will be unavailable after {{ $value| humanizeDuration }}. 
              Clients using endpoints that this cert protects will start to fail in {{ $value | humanizeDuration }}.
            runbook_url: https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagercertexpirysoon
            summary: The cert `{{ $labels.name }}` is {{ $value | humanizeDuration }} from
              expiry, it should have renewed over a week ago.
          expr: |
            avg by (exported_namespace, namespace, name) (
              certmanager_certificate_expiration_timestamp_seconds - time()
            ) < (21 * 24 * 3600) # 21 days in seconds
          for: 1h
          labels:
            severity: warning
        - alert: CertManagerCertNotReady
          annotations:
            dashboard_url: https://grafana.example.com/d/TvuRo2iMk/cert-manager
            description: This certificate has not been ready to serve traffic for at least
              10m. If the cert is being renewed or there is another valid cert, the ingress
              controller _may_ be able to serve that instead.
            runbook_url: https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagercertnotready
            summary: The cert `{{ $labels.name }}` is not ready to serve traffic.
          expr: |
            max by (name, exported_namespace, namespace, condition) (
              certmanager_certificate_ready_status{condition!="True"} == 1
            )
          for: 10m
          labels:
            severity: critical
        - alert: CertManagerHittingRateLimits
          annotations:
            dashboard_url: https://grafana.example.com/d/TvuRo2iMk/cert-manager
            description: Depending on the rate limit, cert-manager may be unable to generate
              certificates for up to a week.
            runbook_url: https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagerhittingratelimits
            summary: Cert manager hitting LetsEncrypt rate limits.
          expr: |
            sum by (host) (
              rate(certmanager_http_acme_client_request_count{status="429"}[5m])
            ) > 0
          for: 5m
          labels:
            severity: critical

