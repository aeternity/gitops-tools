encValues:
  github_client_id: 'AgBSNNKZ6mwri3zNJJqrI3Kfydynw+KwsvTIMxy1/vdQMZPRMqm+WZzlkTom6/ibkoTrHNZq4+Lp5YMupBVoMDqa8reaCrfQ5UZB9eROAzlGgeMxCob90p/tqrM4V+hE4+iaJwNjgETknR2d58pWukfML78FOIV+Bow23HTC79aPXvUm3XYdNWJKjAE9hW+hJ7LbgHF38fH8LvkpRfafRbN80mGabg8oOrIrsDsSq5LFkyDBKUKCY2XjKZ4bzGSu9cZSmG66P6swooBqWJdIA7UFtVDicLppRCYbChLHxjv/dk4y1OTfLkov7qS0h8JJE+P/QWc8nRU5FDL1gN+3UdHdEJ+ay5BZD57GXPmjj3uko0iRfuBGJI/z2QY90/gB4rZVgYEg8fa6AVh48qjo84R1CvV5uh9/BVFAcHBtnc/EDA5Uz83GjQfCsrX3TSsLPJJxA4/elDqybjnEW79Da8Hwx+2x88JAP0KzubD1b0WsYyMNAjcLgOWL75qU7YcPqQbEu0HA4/JeAZcY2XojTzlBe63cBhjA629baK9aGhRfZtzXDxrBaRfTsJ09To3j8yAYhalD0wP3iK8nK9RSuCsprumkZQVF4j2r3NXrAbvGUUjKUEHk5YhP31NfUwrpXX17hn1q/Vg4yaq1rO5VYPZ89U6NtIySizx1+ZWMrEHQFYFVCq2VqsxVZftSqFeUm2ILtKGp8B0zlD5574FlkqkVt6i38cM='
  github_client_secret: 'AgCKtJuJTsbc6bX62TMFAvt+sLxWA1MyHlnSwnbGDLXnjjD+ogV6sc5pa5krgEHV/iuG6Kw3Z/C51U+S5nH9xN2UvIDxlgPQQrtOkLceeiz1dmRVECTkl+XTnyYZdoXzd38BMtKDJp6oHaozhDlgi0D45WZRxFIJi//NWtfjyFexpJzKhnKrrFpYlosjybTrAiV87IQD0T0PVjamxbC3Tlmh+jQxQEBUixSaYh60wSyB7SfmE82kdowUDBwY1OPP6xJj7c0mTsB5vYL7AfAXu3rhaK0spXxLwxO5Zs0I0k/++6Uv8EUJVt2THJNe49vcyUs1pTzzK4Ck0iQ9k0VvAR8y5x0iqnlfRx/0vn38M2c+ngi/nne6gHGEZ4mKWgXuAD3R6PoDW/jG4WzcVkn/i+1rdjf+hWpEf9ff0BvVvmEtZS/mp6rlcyAiRmWQwDJlQxBXqO3b4aKD2YBUlqL7kA2eqn+hGlD+Rd5deyAHXcmedbIvgW+VFXLCiDu/je7kWYhS62lN8hzrWyprrTsnZPWZVSP5wxOVXN7KoUrQOyaO4gFYQWnP9Y+VLz+wK3RcQcO3/i/qQUfIRU+GIwNt55aDqsyiwpbp+Viho5L0NS92Nq089dmf/wfRRMUOhUp4v0gk0FgHgDcfgutsnc5/TerHKyuV9Xp7EppA64kXDoc9bofpDYXKcl/a286XntjPHm8DNE8tDuvEaLxtXk367Z8TpG6b5U2Uium08ZYKn9s3OP9iDSzSaiZkKw=='
  grafana_admin_user: 'AgAWqGoqSHrLowe8at0u4MmDC+vAFoOtzoK/z/XT1oOI1/sF9J5GLZWiXXNeL0pxt5sV1rzfz4BUeRRaWFPJwR1aLPAkSpVnYkftn+WQsj/w8yqLYGEhiQYHfzwjuTA8nIgZHO02pzseO9HO5817BEuwicEWQDOguIzUNGJHjukc2MeqFu0RQFa0ymbDbuq7hgN77QCG4ika1VhKIswIqQ2mxz5SZUG+o9pqJJOGb8WF9t+mBLYn2yvNU8+koUVw+R7JOymyN8J6vkoqvwq93zdRBNl4XogTdGR4aRFSIYPQSUA5LC01cra1yCyV5G4g8KbDStv+gowOpw/2deRa8kkSXKdTMFEl+lFgz4PXC8Hs8jiGA/4kyl+R6lqyEhPmu3oMflB8Qt+JSOzDsN8qJBzGvN0G2YYQnK2Ao4Y5V2EZz51SzNVSOM8ukQ8f/Mdz+9drI082SUfGQt8UWiEm8QP1Z+jBLael7ENakRCu9wrkELHoNqTZsu8uF+KTDyda3ZrigxXegjfU/uLC+0mXl9UDAyItgaIoPycJqOQTj6qCu8Nmsoe29rukAPTTRVbo5A8Cvukcx3cmMAHCTXiVKIoo8IP60ZlljeucZk6WJWVOhXLAeQWlZcH0HEW8wP5HIkajd3/0huAsjZxvjCh5S2cB2n8mjWyS1Veg7mBW52XMlaq1GOSkn29/xX8tkPps1vmp/y558Q=='
  grafana_admin_password: 'AgC7NBaXiNYJWzvUoLKxEIuccJtFCy0FwZuDJHsq5sNXjTkx+phgdp5pCX6JxmGHAq4d0c0Vp3qfH7ZuI4U4n+N/EmKKL9ttU73oRi82V2eq3MEaGlVUmlVdUAk8yi0vshUKUFCMhX8VXSniW46Ym/biiPrQDYLZkMyKh09UO7oTwtNMehrt1y5Z8ZnzUSDvz2PtO8fN3D4ClOPgZl/QeRSCGygg4bdwZfNOXX31MW6e1zyxU8J6ZJtfNeCd2rP8zeA/0MX8r6NxGdGeXMsY74XLiHjUxapUCrr77HUWYmj4KYgmsNFZTp5oeUg73KeTfkQ/06S8yQ6cR5cfmdhs/mrqrUupn1xZKQ5lm32VSnmq+pR67K8UgjSMtzyrrfAMkhhKaFAEnswzA6F/n51MxCI5CWNDaaGRnymyR+Fwb4zB9dzFcmTi2Npl6Iam6P4jsX4kv+r3mSi81el7R5Aa/dZMFvobhhAWQW1WJe3k2xLuWlZcseGq2mu3GwVsgEUD64yslkHQMGW74v4Lr/msSKZ6cpz1KMY4+/5NInyaAxVO38lPmhD8JgIoenTM7eDj8iO/Bmug1PXqxMa2SGrxOfyG7zkKpjzAootlO96xFU4FPg5OZa4tLLugz5ZRnk9o2CkukbykVruyWsm95Pg7QpAtmYGlAUuJpCxjtrE3nu04UsQ5/1Lz8MAZYRpdU5P3t1vLR3agGVJYUnMcnT2WtMJ70Q6KiSV1223dXbdScLeugg=='

kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      additionalScrapeConfigs:
        - job_name: redis_exporter
          static_configs:
            - targets: ['10.0.1.16:9121']
        - job_name: node
          static_configs:
            - targets: ['10.0.1.16:9100']
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
      hosts:
        - "prometheus.dev.aeternity.io"
      pathType: ImplementationSpecific

  grafana:
    admin:
      existingSecret: kube-prometheus-stack-secret
      userKey: grafana_admin_user
      passwordKey: grafana_admin_password
    sidecar:
      dashboards:
        enabled: true
        folderAnnotation: grafana-dashboard-dir
    grafana.ini:
      server:
        domain: grafana.dev.aeternity.io
        root_url: https://grafana.dev.aeternity.io
      plugins:
        enable_alpha: true
      auth.github:
        enabled: true
        client_id: $__file{/etc/secrets/github_client_id}
        client_secret: $__file{/etc/secrets/github_client_secret}
        scopes: user:email,read:org
        auth_url: https://github.com/login/oauth/authorize
        token_url: https://github.com/login/oauth/access_token
        api_url: https://api.github.com/user
        allow_sign_up: true
        allowed_organizations: aeternity
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
      hosts:
        - "grafana.dev.aeternity.io"
      pathType: ImplementationSpecific
    plugins:
      - grafana-piechart-panel
    dashboardProviders:
     dashboardproviders.yaml:
       apiVersion: 1
       providers:
       - name: 'tools'
         orgId: 1
         folder: 'Tools'
         type: file
         disableDeletion: true
         editable: true
         options:
           path: /var/lib/grafana/dashboards/tools
    dashboards:
      tools:
        traefik2:
          gnetId: 11462
          revision: 1
          datasource: Prometheus
        argocd:
          gnetId: 14584
          revision: 1
          datasource: Prometheus
    extraSecretMounts:
    - name: secrets-mount
      secretName: kube-prometheus-stack-secret
      defaultMode: 0440
      mountPath: /etc/secrets
      readOnly: true

  alertmanager:
    alertmanagerSpec:
      externalUrl: "https://alertmanager.dev.aeternity.io"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
      hosts:
        - "alertmanager.dev.aeternity.io"
      pathType: ImplementationSpecific
    config:
      templates:
        - '/etc/alertmanager/config/*.tmpl'
    templateFiles:
      slack.tmpl: |-
           {{ define "cluster" }}{{ .ExternalURL | reReplaceAll ".*alertmanager\\.(.*)" "$1" }}{{ end }}        
           {{ define "slack.ae.text" }}
           {{- $root := . -}}
           {{ range .Alerts }}
             *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
             *Cluster:* {{ template "cluster" $root }}
             *Description:* {{ .Annotations.description }}
             *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:>
             *Runbook:* <{{ .Annotations.runbook }}|:spiral_note_pad:>
             *Details:*
               {{ range .Labels.SortedPairs }} - *{{ .Name }}:* `{{ .Value }}`
               {{ end }}
           {{ end }}
           {{ end }}
           {{ define "slack.ae.title" -}}
              [{{ .Status | toUpper -}}
              {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
              ] {{ .CommonLabels.alertname }}
            {{- end }}
  defaultRules:
    rules:
      kubeScheduler: false

  additionalPrometheusRulesMap:
  - name: blackbox
    groups:
    - name: blackbox
      rules:
        - alert: BlackboxProbeHttpFailure
          expr: probe_http_status_code <= 199 OR probe_http_status_code >= 400
          for: 0m
          labels:
            severity: critical
            namespace: monitoring
            env: dev
          annotations:
            summary: "Probe failed (URL: {{ $labels.instance }})"
            description: "Probe failed\n STATUS_CODE = {{ $value }})"
        - alert: BlackboxProbeBackend
          expr: probe_failed_due_to_regex{target="superhero-backend"} > 0
          for: 0m
          labels:
            severity: critical
            namespace: monitoring
            env: dev
          annotations:
            summary: "Probe failed (URL: {{ $labels.instance }})"
            description: "Please check status on the following link: https://superhero-backend.dev.aepps.com/health/backend"
    - name: pods
      rules:
        - alert: ContainerCpuUsage
          expr: (sum(rate(container_cpu_usage_seconds_total{name!=""}[5m])) BY (instance, name) * 100) > 80
          for: 5m
          labels:
            severity: critical
            namespace: monitoring
            env: dev
          annotations:
            summary: "Container CPU usage"
            description: "Container CPU usage is above 80%\n VALUE = {{ $value }}"
        - alert: RedisDown
          expr: redis_up == 0
          for: 0m
          labels:
            severity: critical
            namespace: monitoring
            env: dev
          annotations:
            summary: Redis down (instance {{ $labels.instance }})
            description: "Redis instance is down"
        - alert: HostHighCpuLoad
          expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
          for: 0m
          labels:
            severity: warning
            namespace: monitoring
            env: dev
          annotations:
            summary: Host high CPU load (instance {{ $labels.instance }})
            description: "CPU load is > 80%\n  VALUE = {{ $value }}"
        - alert: HostOutOfMemory
          expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: Host out of memory (instance {{ $labels.instance }})
            description: "Node memory is filling up (< 10% left)\n  VALUE = {{ $value }}"
